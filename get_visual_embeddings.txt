import torch
from torchvision import models, transforms
from PIL import Image
import numpy as np

# Load the pre-trained ResNet model
resnet = models.resnet101(pretrained=True)
resnet.eval()

# Define the image transformations
preprocess = transforms.Compose([
    transforms.Resize(256),
    transforms.CenterCrop(224),
    transforms.ToTensor(),
    transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),
])

# Function to load and preprocess the image
def load_and_preprocess_image(img_path):
    img = Image.open(img_path).convert("RGB")
    img_t = preprocess(img)
    img_t = torch.unsqueeze(img_t, 0)
    return img_t

# Function to extract features from the image using ResNet
def get_image_embedding(img_path):
    img_t = load_and_preprocess_image(img_path)
    with torch.no_grad():
        features = resnet(img_t)
    return features

# Example usage
img_path = 'path_to_your_image.jpg'
embedding = get_image_embedding(img_path)
print(embedding.shape)
